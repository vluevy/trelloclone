<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title></title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/all.css"
        integrity="sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc" crossorigin="anonymous">

    <style type="text/css">
        * {
            padding: 0;
            margin: 0;
        }

        *,
        ::after,
        ::before {
            box-sizing: border-box;
        }

        .title {
            width: 100%;
            height: 10vh;
            background-color: #23609b;
            text-align: center;
            line-height: 10vh;
            color: whitesmoke;
        }

        .container {
            background-color: #2b70b5;
            height: 90vh;
        }

        .listgrid {
            display: flex;
            justify-content: flex-start;
            width: 100%;
            height: 90vh;
            overflow: auto;
            margin: 0 auto;
            padding: 30px 15px 15px;
        }

        .list-card {
            width: 100%;
            max-width: 250px;
            padding: 5px;
        }

        .list {
            width: 100%;
            padding: 5px;
            background-color: #eee;
            border-radius: 5px;
            margin-right: 15px;
        }

        .addList-div,
        .addCard-div {
            font-size: 1rem;
            cursor: pointer;
            padding: 5px;
            border-radius: 3px;
        }

        .addList-div:hover,
        .addCard-div:hover {
            background-color: rgb(199, 199, 199);
        }

        .btn-form {
            margin-top: 10px;
        }

        .list-input,
        .card-input {
            width: 100%;
            line-height: 15px;
            padding: 3px;
            margin-bottom: 5px;
        }

        .btn {
            margin-right: 5px;
            cursor: pointer;
        }

        .saveBtn {
            background-color: seagreen;
            color: whitesmoke;
            padding: 3px;
            border-radius: 3px;
        }

        .listname {
            margin-bottom: 10px;
            font-weight: 600;
        }

        .card {
            background-color: white;
            border-radius: 3px;
            margin: 10px 0;
            padding: 5px;
        }

        .cards {
            min-height: 5px;
        }
    </style>

</head>

<body>

    <div class="title">
        <h3>trello?</h3>
    </div>
    <div class="container">
        <div class="listgrid">
            <% for(var i=0; i< lists.length; i++) { %>
                <div class="list-card">
                    <div class="list" id="<%=lists[i].listnum%>">
                        <div class="listname">
                            <%=lists[i].listname%>
                        </div>
                        <div class="cards">
                            <% for(var j=0; j< cards.length;j++) { %>
                                <% if(lists[i].listnum==cards[j].listnum) { %>
                                    <div class="card" id="<%=cards[j].num%>" draggable="true">
                                        <%=cards[j].cardname %>
                                    </div>
                                    <% } %>
                                        <% } %>
                        </div>
                        <div class="addCard-div">
                            <i class="fas fa-plus"></i> Add a card...
                        </div>
                    </div>
                </div>
                <% } %>

                    <div class="list-card">
                        <div class="list addList-div">
                            <i class="fas fa-plus"></i> Add a list...
                        </div>
                    </div>
                    
        </div>
    </div>


</body>

</html>


<script type="text/javascript">

    const listBox = document.querySelector("div.addList-div");
    let isActiveListBox = false;
    listBox.addEventListener("click", function () {
        if (!isActiveListBox) {
            listBox.classList.remove("addList-div");
            listBox.classList.add("active-addList");
            listBox.innerHTML = `
                <form name="listform" method="post">
                    <input class="list-input" name="listname" type="text" placeholder="Add a list..." autofocus>
                        <span class="btn saveBtn" onclick="addList();">Save</span>
                        <span class="btn" id="cancel-list-Btn">X</span>
                </form>
                `;
            isActiveListBox = true;
        }
    });

    
    function addList() {
        var f = document.listform;
        var str = f.listname.value;
        if (!str) {
            alert("리스트이름을 입력하세요");
            f.listname.focus();
            return;
        }
        f.action = "/trello/addlist";
        f.submit();
    };
    
    document.addEventListener('click', function (e) {
        if (e.target && e.target.id == 'cancel-list-Btn') {
            const listBox2 = document.querySelector("div.active-addList");
            if (isActiveListBox) {
                listBox2.classList.remove("active-addList");
                listBox2.classList.add("addList-div");
                listBox2.innerHTML = `
                    <div class="list-card">
                        <i class="fas fa-plus"></i> Add a list...
                    </div>
                    `;
                isActiveListBox = false;
            }
        }
    });

    document.addEventListener('click', function addcard(e) {
        var t = e.target.closest("div");
        if (t.classList == "addCard-div") {
            t.classList.remove("addCard-div");
            t.classList.add("active-addCard");
            t.innerHTML = `
                <form name="cardform" method="post">
                    <input class="card-input" name="cardname" type="text" placeholder="Add a card..." autofocus>
                        <span class="btn saveBtn" onclick="addCard();">Save</span>
                        <span class="btn" id="cancel-card-Btn">X</span>
                        <input name="listnum" type="hidden" value="`+ t.parentNode.id + `">
                </form>
                `;
        }
    });

    document.addEventListener('click', function (e) {
        if (e.target && e.target.id == 'cancel-card-Btn') {
            const cardBox2 = e.target.closest("div");
            cardBox2.classList.remove("active-addCard");
            cardBox2.classList.add("addCard-div");
            cardBox2.innerHTML = `
                    <i class="fas fa-plus"></i> Add a card...
                `;
        }
    });

    function addCard() {
        var f = event.target.closest("form");
        var str = f.cardname.value;
        if (!str) {
            alert("카드이름을 입력하세요");
            f.cardname.focus();
            return;
        }
        f.action = "/trello/addcard";
        f.submit();
    };


    const $ = (select) => document.querySelectorAll(select);
    const draggables = $('.card');
    const containers = $('.cards');

    draggables.forEach(el => {
        el.addEventListener('dragstart', () => {
            el.classList.add('dragging');
        });

        el.addEventListener('dragend', e => {
            const draggable = document.querySelector('.dragging')
            console.log("리스트:"+e.target.parentNode.parentNode.id+"카드:"+draggable.id);
            console.log(getElementIndex(draggable)+1);
            const position=getElementIndex(draggable)+1;
            el.classList.remove('dragging')
            var url="/trello/update?listnum="+e.target.parentNode.parentNode.id+"&num="+draggable.id+"&position="+position;
		    location.href=url;
        });
    });

    function getDragAfterElement(container, y) {
        const draggableElements = [...container.querySelectorAll('.card:not(.dragging)')]

        return draggableElements.reduce((closest, child) => {
            const box = child.getBoundingClientRect() 
            const offset = y - box.top - box.height / 2
            if (offset < 0 && offset > closest.offset) {
                return { offset: offset, element: child }
            } else {
                return closest
            }
        }, { offset: Number.NEGATIVE_INFINITY }).element
    };


    containers.forEach(container => {
        container.addEventListener('dragover', e => {
            e.preventDefault();
            const afterElement = getDragAfterElement(container, e.clientY);
            const draggable = document.querySelector('.dragging')
            container.insertBefore(draggable, afterElement)
            
        })
    });

    function getElementIndex(element) {
        return [].indexOf.call(element.parentNode.children, element);
    }
</script>